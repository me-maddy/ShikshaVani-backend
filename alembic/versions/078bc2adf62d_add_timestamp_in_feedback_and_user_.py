"""add timestamp in feedback and user tables

Revision ID: 078bc2adf62d
Revises: 63a90e87a79c
Create Date: 2025-05-06 15:25:09.031161

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '078bc2adf62d'
down_revision: Union[str, None] = '63a90e87a79c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'classes', ['name'])
    op.add_column('feedbacks', sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('feedbacks', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('feedbacks', 'updated_at')
    op.drop_column('feedbacks', 'created_at')
    op.drop_constraint(None, 'classes', type_='unique')
    # ### end Alembic commands ###
